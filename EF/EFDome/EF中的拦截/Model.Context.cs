//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EF中的拦截
{
    using System;
    using System.Collections.Generic;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Validation;

    public partial class SchoolDBEntities : DbContext
    {
        public SchoolDBEntities()
            : base("name=SchoolDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
        /// <summary>
        /// 是否需要验证实体
        /// </summary>
        /// <param name="entityEntry"></param>
        /// <returns></returns>
        protected override bool ShouldValidateEntity(DbEntityEntry entityEntry)
        {
            return true;
        }
        /// <summary>
        /// 具体的验证行为
        /// </summary>
        /// <param name="entityEntry"></param>
        /// <param name="items"></param>
        /// <returns></returns>
        protected override DbEntityValidationResult ValidateEntity(DbEntityEntry entityEntry, IDictionary<object, object> items)
        {
            //开始自定义验证
            if (entityEntry.Entity is StudentSets) {
                //找到名字
                var name = entityEntry.CurrentValues.GetValue<String>("Name");
                if (name == "lint") {
                    var list = new List<DbValidationError>();
                    list.Add(new DbValidationError("Name", "名字不能是lint"));

                    return new DbEntityValidationResult(entityEntry,list);
                }
            }

            return base.ValidateEntity(entityEntry, items);
        }

        public virtual DbSet<Classes> Classes { get; set; }
        public virtual DbSet<StudentSets> StudentSets { get; set; }

        

    }
}
